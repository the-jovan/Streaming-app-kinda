{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","streams","get","concat","sent","type","payload","data","stop","_x4","apply","this","arguments","StreamForm","renderInput","formProps","className","meta","error","touched","react_default","createElement","label","assign","input","autoComplete","_this","renderError","onSubmit","formValues","props","_ref","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","streams_StreamForm","connect","_callee","getState","userId","_context","auth","post","objectSpread","history","push","_x","_x2","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","_ref4","_callee4","_context4","patch","_x5","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","react_router_dom","to","components_Modal","renderContent","renderActions","_ref5","_callee5","_context5","delete","_x6","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","values","_ref2","_callee2","_context2","_x3","StreamShow","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","videoRef","createRef","buildPLayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","_this$props$stream","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","_this2","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","components_GoogleAuth","App","react_router","components_Header","path","exact","INTIAL_STATE","combineReducers","length","undefined","action","formReducer","defineProperty","omit","mapKeys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"0RAEeA,WAAMC,OAAO,CACxBC,QAAS,kCCDEC,gBC2CFC,EAAc,SAACC,GAAD,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAQ,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,EAAQC,IAAR,YAAAC,OAAwBhB,IADhB,OACzBS,EADyBE,EAAAM,KAG/BT,EAAS,CACLU,KC7CoB,eD8CpBC,QAASV,EAASW,OALS,wBAAAT,EAAAU,SAAAd,MAAR,gBAAAe,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,sBE1CrBC,6MAWFC,YAAc,SAACC,GACX,IAAMC,EAAS,SAAAb,OAAYY,EAAUE,KAAKC,OAASH,EAAUE,KAAKE,QAAU,QAAU,IACtF,OACIC,EAAA5B,EAAA6B,cAAA,OAAKL,UAAWA,GACZI,EAAA5B,EAAA6B,cAAA,aAAQN,EAAUO,OAClBF,EAAA5B,EAAA6B,cAAA,QAAAhC,OAAAkC,OAAA,GAAWR,EAAUS,MAArB,CAA4BC,aAAa,SACxCC,EAAKC,YAAYZ,EAAUE,UAKxCW,SAAW,SAACC,GACRH,EAAKI,MAAMF,SAASC,kFAtBQ,IAAlBX,EAAkBa,EAAlBb,MACV,GAD4Ba,EAAXZ,SACFD,EACX,OACIE,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,oBACXI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,UAAUE,qCAsBrC,OACIE,EAAA5B,EAAA6B,cAAA,QACIO,SAAUjB,KAAKmB,MAAME,aAAarB,KAAKiB,UACvCZ,UAAU,iBACVI,EAAA5B,EAAA6B,cAACY,EAAA,EAAD,CAAOC,KAAK,QACRC,UAAWxB,KAAKG,YAChBQ,MAAM,gBAEVF,EAAA5B,EAAA6B,cAACY,EAAA,EAAD,CAAOC,KAAK,cACRC,UAAWxB,KAAKG,YAChBQ,MAAM,sBAEVF,EAAA5B,EAAA6B,cAAA,UAAQL,UAAU,qBAAlB,kBAvCSoB,IAAMC,WA0DhBC,cAAU,CACrBC,KAAM,aACNC,SAfa,SAACX,GACd,IAAMY,EAAS,GASf,OARKZ,EAAWa,QAEZD,EAAOC,MAAQ,0BAEdb,EAAWc,cACZF,EAAOE,YAAc,gCAGlBF,IAGIH,CAGZzB,GC3DG+B,6MAEFhB,SAAW,SAACC,GACRH,EAAKI,MAAMe,aAAahB,4EAIxB,OACIT,EAAA5B,EAAA6B,cAAA,WACID,EAAA5B,EAAA6B,cAAA,6BACAD,EAAA5B,EAAA6B,cAACyB,EAAD,CAAYlB,SAAUjB,KAAKiB,mBAVhBQ,IAAMC,WAiBlBU,cAAQ,KAAM,CAAEF,aHGH,SAAAhB,GAAU,sBAAAE,EAAA1C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAuD,EAAOrD,EAAUsD,GAAjB,IAAAC,EAAAtD,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAC9BkD,EAAWD,IAAWG,KAAtBF,OAD8BC,EAAAnD,KAAA,EAEfC,EAAQoD,KAAK,WAAbhE,OAAAiE,EAAA,EAAAjE,CAAA,GAA6BwC,EAA7B,CAAyCqB,YAF1B,OAEhCtD,EAFgCuD,EAAA/C,KAItCT,EAAS,CACLU,KC5BqB,gBD6BrBC,QAASV,EAASW,OAEtBgD,EAAQC,KAAK,KARyB,wBAAAL,EAAA3C,SAAAwC,MAAJ,gBAAAS,EAAAC,GAAA,OAAA3B,EAAArB,MAAAC,KAAAC,YAAA,KGHvBmC,CAAgCH,oBChBzCe,6MAKF/B,SAAW,SAACC,GACRH,EAAKI,MAAM8B,WAAWlC,EAAKI,MAAM+B,MAAMC,OAAO3E,GAAI0C,uFAJlDlB,KAAKmB,MAAM5C,YAAYyB,KAAKmB,MAAM+B,MAAMC,OAAO3E,qCAQ/C,OAAKwB,KAAKmB,MAAMiC,OAQZ3C,EAAA5B,EAAA6B,cAAA,WACID,EAAA5B,EAAA6B,cAAA,2BACAD,EAAA5B,EAAA6B,cAACyB,EAAD,CAKAkB,cAAeC,IAAEC,KAAKvD,KAAKmB,MAAMiC,OAAQ,QAAS,eAClDnC,SAAUjB,KAAKiB,YAdfR,EAAA5B,EAAA6B,cAAA,6BAZSe,IAAMC,WAqChBU,cAJS,SAACoB,EAAOC,GAC5B,MAAO,CAAEL,OAAQI,EAAMlE,QAAQmE,EAASP,MAAMC,OAAO3E,MAKrD,CAACD,cAAa0E,WJSQ,SAACzE,EAAI0C,GAAL,sBAAAwC,EAAAhF,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAoB,SAAA6E,EAAM3E,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EACnBC,EAAQuE,MAAR,YAAArE,OAA0BhB,GAAM0C,GADb,OACpCjC,EADoC2E,EAAAnE,KAG1CT,EAAS,CACLU,KCpDmB,cDqDnBC,QAASV,EAASW,OAEtBgD,EAAQC,KAAK,KAP6B,wBAAAe,EAAA/D,SAAA8D,MAApB,gBAAAG,GAAA,OAAAJ,EAAA3D,MAAAC,KAAAC,YAAA,KIXXmC,CAGbY,WCtBae,EArBD,SAAA5C,GACV,OAAO6C,IAASC,aACZxD,EAAA5B,EAAA6B,cAAA,OAAKwD,QAAS/C,EAAMgD,UAChB9D,UAAU,mCACVI,EAAA5B,EAAA6B,cAAA,OAAKwD,QAAS,SAACE,GAAD,OAAOA,EAAEC,mBACnBhE,UAAU,oCACVI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,UACVc,EAAMY,OAEXtB,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,WACVc,EAAMmD,SAEX7D,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,WACVc,EAAMoD,WAInBC,SAASC,cAAc,YCbzBC,8LAEE1E,KAAKmB,MAAM5C,YAAYyB,KAAKmB,MAAM+B,MAAMC,OAAO3E,4CAGnC,IAAAuC,EAAAf,KACNxB,EAAKwB,KAAKmB,MAAM+B,MAAMC,OAAO3E,GACnC,OACIiC,EAAA5B,EAAA6B,cAACD,EAAA5B,EAAM8F,SAAP,KACIlE,EAAA5B,EAAA6B,cAAA,UACIwD,QAAS,kBAAMnD,EAAKI,MAAMyD,aAAapG,IACvC6B,UAAU,sBAFd,UAMAI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CACIC,GAAG,IACHzE,UAAU,aAFd,mDAWR,OAAKL,KAAKmB,MAAMiC,OAIhB,0DAAA5D,OAAiEQ,KAAKmB,MAAMiC,OAAOrB,OAHxE,gFAOX,OACItB,EAAA5B,EAAA6B,cAACqE,EAAD,CACIhD,MAAM,gBACNuC,QAAStE,KAAKgF,gBACdT,QAASvE,KAAKiF,gBACdd,UAAW,kBAAMvB,EAAQC,KAAK,eAvCnBpB,IAAMC,WAmDlBU,cANS,SAACoB,EAAOC,GAC5B,MAAO,CACHL,OAAQI,EAAMlE,QAAQmE,EAASP,MAAMC,OAAO3E,MAKhD,CAAED,cAAaqG,aNKS,SAACpG,GAAD,sBAAA0G,EAAAxG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAQ,SAAAqG,EAAMnG,GAAN,OAAAJ,EAAAC,EAAAK,KAAA,SAAAkG,GAAA,cAAAA,EAAAhG,KAAAgG,EAAA/F,MAAA,cAAA+F,EAAA/F,KAAA,EAC1BC,EAAQ+F,OAAR,YAAA7F,OAA2BhB,IADD,OAGhCQ,EAAS,CACLU,KC/DqB,gBDgErBC,QAASnB,IAEboE,EAAQC,KAAK,KAPmB,wBAAAuC,EAAAvF,SAAAsF,MAAR,gBAAAG,GAAA,OAAAJ,EAAAnF,MAAAC,KAAAC,YAAA,KMNbmC,CAEdsC,GCvDKa,8LAEEvF,KAAKmB,MAAMqE,mDAGHpC,GACR,GAAIA,EAAOb,SAAWvC,KAAKmB,MAAMsE,cAC7B,OACIhF,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,yBACXI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CAAMC,GAAE,iBAAAtF,OAAmB4D,EAAO5E,IAC9B6B,UAAU,qBADd,QAIAI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CAAMC,GAAE,mBAAAtF,OAAqB4D,EAAO5E,IAChC6B,UAAU,sBADd,gDASH,IAAAU,EAAAf,KACT,OAAOA,KAAKmB,MAAM7B,QAAQoG,IAAK,SAAAtC,GAC3B,OACI3C,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,OAAOsF,IAAKvC,EAAO5E,IAC7BuC,EAAK6E,YAAYxC,GAClB3C,EAAA5B,EAAA6B,cAAA,KAAGL,UAAU,qCACbI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,WACXI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CAAMC,GAAE,YAAAtF,OAAc4D,EAAO5E,IAAM6B,UAAU,UACxC+C,EAAOrB,OAEZtB,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,eACV+C,EAAOpB,wDAS5B,GAAIhC,KAAKmB,MAAM0E,WACX,OACIpF,EAAA5B,EAAA6B,cAAA,OAAKoF,MAAO,CAAEC,UAAW,UACrBtF,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CACIC,GAAG,eACHzE,UAAU,qBAFd,mDAWZ,OACII,EAAA5B,EAAA6B,cAAA,WACID,EAAA5B,EAAA6B,cAAA,qBACAD,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,kBACVL,KAAKgG,aACLhG,KAAKiG,wBA7DDxE,IAAMC,WA4EhBU,cARS,SAACoB,GACrB,MAAO,CACHlE,QAASZ,OAAOwH,OAAO1C,EAAMlE,SAC7BmG,cAAejC,EAAMf,KAAKF,OAC1BsD,WAAYrC,EAAMf,KAAKoD,aAIS,CAAEL,aP7Cd,iCAAAW,EAAAzH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAsH,EAAMpH,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAmH,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAhH,MAAA,cAAAgH,EAAAhH,KAAA,EACPC,EAAQC,IAAI,YADL,OACxBN,EADwBoH,EAAA5G,KAG9BT,EAAS,CACLU,KCrCqB,gBDsCrBC,QAASV,EAASW,OALQ,wBAAAyG,EAAAxG,SAAAuG,MAAN,gBAAAE,GAAA,OAAAH,EAAApG,MAAAC,KAAAC,YAAA,KO6CbmC,CAA2CmD,YC5EpDgB,cACF,SAAAA,EAAYpF,GAAO,IAAAJ,EAAA,OAAArC,OAAA8H,EAAA,EAAA9H,CAAAsB,KAAAuG,IACfxF,EAAArC,OAAA+H,EAAA,EAAA/H,CAAAsB,KAAAtB,OAAAgI,EAAA,EAAAhI,CAAA6H,GAAAI,KAAA3G,KAAMmB,KACDyF,SAAWnF,IAAMoF,YAFP9F,mFAKC,IACTvC,EAAMwB,KAAKmB,MAAM+B,MAAMC,OAAvB3E,GACPwB,KAAKmB,MAAM5C,YAAYC,GACvBwB,KAAK8G,2DAIL9G,KAAK8G,6DAIL9G,KAAK+G,OAAOC,gDAIZ,IAAIhH,KAAK+G,QAAW/G,KAAKmB,MAAMiC,OAA/B,CADU,IAIH5E,EAAMwB,KAAKmB,MAAM+B,MAAMC,OAAvB3E,GACPwB,KAAK+G,OAASE,IAAIC,aAAa,CAC3BxH,KAAM,MACNyH,IAAG,+BAAA3H,OAAiChB,EAAjC,UAEPwB,KAAK+G,OAAOK,mBAAmBpH,KAAK4G,SAASS,SAC7CrH,KAAK+G,OAAOO,yCAKZ,IAAKtH,KAAKmB,MAAMiC,OACZ,OAAO3C,EAAA5B,EAAA6B,cAAA,yBAFN,IAAA6G,EAK0BvH,KAAKmB,MAAMiC,OAAlCrB,EALHwF,EAKGxF,MAAOC,EALVuF,EAKUvF,YAEf,OACIvB,EAAA5B,EAAA6B,cAAA,WACID,EAAA5B,EAAA6B,cAAA,SAAO8G,IAAKxH,KAAK4G,SACbd,MAAO,CAAC2B,MAAO,QACfC,UAAU,IAEdjH,EAAA5B,EAAA6B,cAAA,UAAKqB,GACLtB,EAAA5B,EAAA6B,cAAA,UAAKsB,WAhDIP,IAAMC,WA4DhBU,cANS,SAACoB,EAAOC,GAC5B,MAAO,CACHL,OAAQI,EAAMlE,QAAQmE,EAASP,MAAMC,OAAO3E,MAIZ,CAAED,eAA3B6D,CAA0CmE,GC7DnDoB,6MAcFC,aAAe,SAAC/B,GACRA,EACA9E,EAAKI,MAAM0G,OAAO9G,EAAK0B,KAAKqF,YAAYvI,MAAMwI,SAE9ChH,EAAKI,MAAM6G,aAInBC,cAAgB,WACZlH,EAAK0B,KAAKoF,YAGdK,eAAiB,WACbnH,EAAK0B,KAAKuF,8FA1BM,IAAAG,EAAAnI,KAChBoI,OAAOC,KAAKf,KAAK,eAAgB,WAC7Bc,OAAOC,KAAKC,OAAOC,KAAK,CACpBC,SAAU,2EACVC,MAAO,UACRC,KAAK,WACJP,EAAK1F,KAAO2F,OAAOC,KAAKM,MAAMC,kBAC9BT,EAAKP,aAAaO,EAAK1F,KAAKoD,WAAWtG,OACvC4I,EAAK1F,KAAKoD,WAAWgD,OAAOV,EAAKP,6DAsBzC,OAA8B,OAA1B5H,KAAKmB,MAAM0E,WACJ,KACA7F,KAAKmB,MAAM0E,WAEdpF,EAAA5B,EAAA6B,cAAA,UAAQwD,QAASlE,KAAKkI,eAAgB7H,UAAU,wBAC5CI,EAAA5B,EAAA6B,cAAA,KAAGL,UAAU,gBADjB,YAOAI,EAAA5B,EAAA6B,cAAA,UAAQwD,QAASlE,KAAKiI,cAAe5H,UAAU,wBAC3CI,EAAA5B,EAAA6B,cAAA,KAAGL,UAAU,gBADjB,wDASR,OACII,EAAA5B,EAAA6B,cAAA,WAAMV,KAAK8I,2BApDErH,IAAMC,WA6DhBU,cAJS,SAACoB,GACrB,MAAO,CAAEqC,WAAYrC,EAAMf,KAAKoD,aAGI,CAAEgC,OTrDpB,SAACtF,GACnB,MAAO,CACH7C,KCde,UDefC,QAAS4C,ISkDiCyF,QT9C3B,WACnB,MAAO,CACHtI,KCpBgB,cQgET0C,CAA8CuF,GC7C9CoB,EAhBA,WACX,OACItI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,8BACXI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CAAMC,GAAG,IAAIzE,UAAU,QAAvB,WAGAI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,cACXI,EAAA5B,EAAA6B,cAACmE,EAAA,EAAD,CAAMC,GAAG,IAAIzE,UAAU,QAAvB,eAGAI,EAAA5B,EAAA6B,cAACsI,EAAD,SCgBDC,EAnBH,WACR,OACIxI,EAAA5B,EAAA6B,cAAA,OAAKL,UAAU,gBACXI,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAQtG,QAASA,GACbnC,EAAA5B,EAAA6B,cAAA,WACID,EAAA5B,EAAA6B,cAACyI,EAAD,MACA1I,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,KACIzI,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAOE,KAAK,IAAIC,OAAK,EAAC7H,UAAW+D,IACjC9E,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAOE,KAAK,eAAeC,OAAK,EAAC7H,UAAWS,IAC5CxB,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAOE,KAAK,oBAAoBC,OAAK,EAAC7H,UAAWwB,IACjDvC,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAOE,KAAK,sBAAsBC,OAAK,EAAC7H,UAAWkD,IACnDjE,EAAA5B,EAAA6B,cAACwI,EAAA,EAAD,CAAOE,KAAK,eAAeC,OAAK,EAAC7H,UAAW+E,kBCpB9D+C,EAAe,CACjBzD,WAAY,KACZtD,OAAQ,cCGGgH,cAAgB,CAC3B9G,KDDW,WAAkC,IAAjCe,EAAiCvD,UAAAuJ,OAAA,QAAAC,IAAAxJ,UAAA,GAAAA,UAAA,GAAzBqJ,EAAcI,EAAWzJ,UAAAuJ,OAAA,EAAAvJ,UAAA,QAAAwJ,EAC7C,OAAQC,EAAOhK,MACX,IXTe,UWUX,OAAOhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAK8E,EAAZ,CAAmBqC,YAAY,EAAMtD,OAAQmH,EAAO/J,UACxD,IXVgB,WWWZ,OAAOjB,OAAAiE,EAAA,EAAAjE,CAAA,GAAK8E,EAAZ,CAAmBqC,YAAY,EAAOtD,OAAQ,OAClD,QACI,OAAOiB,ICLf5B,KAAM+H,IACNrK,QCDW,WAAwB,IAAvBkE,EAAuBvD,UAAAuJ,OAAA,QAAAC,IAAAxJ,UAAA,GAAAA,UAAA,GAAf,GAAIyJ,EAAWzJ,UAAAuJ,OAAA,EAAAvJ,UAAA,QAAAwJ,EACnC,OAAOC,EAAOhK,MAEV,IbRoB,eaUpB,IbZqB,gBacrB,IbVmB,caWf,OAAOhB,OAAAiE,EAAA,EAAAjE,CAAA,GAAK8E,EAAZ9E,OAAAkL,EAAA,EAAAlL,CAAA,GAAoBgL,EAAO/J,QAAQnB,GAAIkL,EAAO/J,UAElD,IbdqB,gBaejB,OAAO2D,IAAEuG,KAAKrG,EAAOkG,EAAO/J,SAEhC,IbnBqB,gBaoBjB,OAAOjB,OAAAiE,EAAA,EAAAjE,CAAA,GAAK8E,EAAUF,IAAEwG,QAAQJ,EAAO/J,QAAS,OACpD,QACI,OAAO6D,MCjBbuG,EAAmB3B,OAAO4B,sCAAwCC,IAClEC,EAAQC,YACVC,EACAL,EAAiBM,YAAgBC,OAGrCtG,IAASuG,OACL9J,EAAA5B,EAAA6B,cAAC8J,EAAA,EAAD,CAAUN,MAAOA,GACbzJ,EAAA5B,EAAA6B,cAAC+J,EAAD,OAEJjG,SAASC,cAAc","file":"static/js/main.778dd716.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n})","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import streams from '../apis/streams'\r\nimport history from '../history'\r\nimport { \r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from './types'\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth\r\n    const response = await streams.post('/streams', {...formValues, userId})\r\n\r\n    dispatch({\r\n        type: CREATE_STREAM,\r\n        payload: response.data\r\n    })\r\n    history.push('/')\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams')\r\n\r\n    dispatch({\r\n        type: FETCH_STREAMS,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`)\r\n\r\n    dispatch({\r\n        type: FETCH_STREAM,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues)\r\n\r\n    dispatch({\r\n        type: EDIT_STREAM,\r\n        payload: response.data\r\n    })\r\n    history.push('/')\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`)\r\n\r\n    dispatch({ \r\n        type: DELETE_STREAM,\r\n        payload: id\r\n    })\r\n    history.push('/')\r\n}","export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\nexport const CREATE_STREAM = 'CREATE_STREAM'\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS'\r\nexport const FETCH_STREAM = 'FETCH_STREAM'\r\nexport const DELETE_STREAM = 'DELETE_STREAM'\r\nexport const EDIT_STREAM = 'EDIT_STREAM'","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    renderInput = (formProps) => {\r\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`\r\n        return(\r\n            <div className={className}>\r\n                <label>{formProps.label}</label>\r\n                <input {...formProps.input} autoComplete=\"off\"/>\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                className=\"ui form error\">\r\n                <Field name=\"title\" \r\n                    component={this.renderInput} \r\n                    label=\"Enter Title\"\r\n                />\r\n                <Field name=\"description\" \r\n                    component={this.renderInput} \r\n                    label=\"Enter Description\"\r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {}\r\n    if (!formValues.title) {\r\n        // only ran if the user did not enter a title\r\n        errors.title = 'You must enter a title'\r\n    }\r\n    if (!formValues.description) {\r\n        errors.description = 'You must enter a description'\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStream } from '../../actions/index'\r\nimport StreamForm from './StreamForm'\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.createStream(formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create a Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { createStream })(StreamCreate)","import _ from 'lodash'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream, editStream } from '../../actions/index'\r\nimport StreamForm from './StreamForm'\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return(\r\n                <div>\r\n                    louding\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm\r\n                // initialValues={{\r\n                //     title: 'EDIT ME',\r\n                //     description: 'CHANGE ME TOO'\r\n                // }}\r\n                initialValues={_.pick(this.props.stream, 'title', 'description')}\r\n                onSubmit={this.onSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {fetchStream, editStream}\r\n)(StreamEdit)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} \r\n            className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()}\r\n                className=\"ui standard modal visible active\">\r\n                <div className=\"header\">\r\n                    {props.title}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {props.content}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from '../Modal'\r\nimport history from '../../history'\r\nimport { fetchStream, deleteStream } from '../../actions/index'\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    renderActions() {\r\n        const id = this.props.match.params.id\r\n        return (\r\n            <React.Fragment>\r\n                <button \r\n                    onClick={() => this.props.deleteStream(id)}\r\n                    className=\"ui button negative\"\r\n                >\r\n                    Delete\r\n                </button>\r\n                <Link\r\n                    to=\"/\" \r\n                    className=\"ui button\"\r\n                >\r\n                    Cancel\r\n                </Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    renderContent(){\r\n        if (!this.props.stream) {\r\n            return 'Are you sure you want to delete this stream?'\r\n        }\r\n\r\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <Modal \r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                actions={this.renderActions()}\r\n                onDismiss={() => history.push('/')}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    { fetchStream, deleteStream })\r\n(StreamDelete)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchStreams } from '../../actions/index'\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStreams()\r\n    }\r\n    \r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} \r\n                        className=\"ui button primary\">\r\n                        Edit\r\n                    </Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} \r\n                        className=\"ui button negative\">\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map( stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className=\"description\">\r\n                            {stream.description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right'}}>\r\n                    <Link \r\n                        to='/streams/new' \r\n                        className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">\r\n                    {this.renderList()}\r\n                    {this.renderCreate()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        streams: Object.values(state.streams), \r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)","import React from 'react'\r\nimport flv from 'flv.js'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream } from '../../actions/index'\r\n\r\nclass StreamShow extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.videoRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params\r\n        this.props.fetchStream(id)\r\n        this.buildPLayer()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildPLayer()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.player.destroy()\r\n    }\r\n\r\n    buildPLayer() {\r\n        if (this.player || !this.props.stream) {\r\n            return\r\n        }\r\n        const {id} = this.props.match.params\r\n        this.player = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `https://localhost:8000/live/${id}.flv`\r\n        })\r\n        this.player.attachMediaElement(this.videoRef.current)\r\n        this.player.load()\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const { title, description } = this.props.stream\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} \r\n                    style={{width: '100%'}}\r\n                    controls={true}    \r\n                />\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../actions/index'\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '426367543032-ggts1u3g13os5qhs8hrq3ldv3h9vl3nc.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance()\r\n                this.onAuthChange(this.auth.isSignedIn.get())\r\n                this.auth.isSignedIn.listen(this.onAuthChange)\r\n            })\r\n        })  \r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId())\r\n        } else {\r\n            this.props.signOut()\r\n        }\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn()\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut()\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\"/>\r\n                    Sign Out\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\"/>\r\n                    Sign In with Google\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.renderAuthButton()}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { isSignedIn: state.auth.isSignedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport GoogleAuth from './GoogleAuth'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                Streamy\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport StreamCreate from './streams/StreamCreate'\r\nimport StreamEdit from './streams/StreamEdit'\r\nimport StreamDelete from './streams/StreamDelete'\r\nimport StreamList from './streams/StreamList'\r\nimport StreamShow from './streams/StreamShow'\r\nimport Header from './Header'\r\nimport history from '../history'\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={StreamList}/>\r\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit}/>\r\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete}/>\r\n                        <Route path=\"/streams/:id\" exact component={StreamShow}/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import { SIGN_IN, SIGN_OUT } from '../actions/types'\r\n\r\nconst INTIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n}\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload }\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer} from 'redux-form'\r\nimport authReducer from './authReducer'\r\nimport streamReducer from './streamReducer'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n})","import _ from 'lodash'\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from '../actions/types'\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        // single record from api, add it to stream... it's all the same\r\n        case FETCH_STREAM:\r\n            return { ...state, [action.payload.id]:action.payload }\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]:action.payload }\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]:action.payload }\r\n        // deleting record from stream object\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload)\r\n        // marging array of records in state object\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id')}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux' \r\nimport reduxThunk from 'redux-thunk'\r\nimport App from './components/App'\r\nimport reducers from './reducers/index'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}